runtime ftplugin/man.vim

let g:useSpace = 1
let g:length = 4
let g:fileMan = 0
let g:resizeMode = 0
let s:back = 232
let s:back2 = 234
let s:back3 = 235
let s:front = 240

function! HelpKey()
    echo "Help : "
    echo "F1 .......... This help"
    echo "F2 .......... Search with grep"
    echo "F5 .......... Refresh vimrc"
    echo "F6 .......... Toggle with space and tab"
    echo "F7 .......... Toggle with tab length 4 and 2"
    echo "F9 .......... Find all git conflict"
    echo "F10 ......... Find all TODO in project"
    echo "F11 ......... Toggle spell check"
endfun

function! ToggleExpandTab()
    if g:useSpace == 1
        let g:useSpace = 0
        set noexpandtab
        echo "use tabulation"
    else
        let g:useSpace = 1
        set expandtab
        echo "use space"
    endif
endfun

function! ToggleLength()
    if g:length == 4
        let g:length = 2
        echo "length set to 2"
    else
        let g:length = 4
        echo "length set to 4"
    endif
    exe "set tabstop="..g:length
    exe "set shiftwidth="..g:length
endfun

function! ToggleFileManager()
    if g:fileMan == 0
        let g:fileMan = 1
        exe "Lex | vertical resize 30"
    else
        let g:fileMan = 0
        exe "Lex"
    endif
endfun

function! JsonPretty(is_selection) range
    if !executable('jq')
        echohl ErrorMsg | echo "jq is not installed" | echohl None | return
    endif

    silent exe a:is_selection ? "'<,'>!jq ." : "%!jq ."
endfun

function! XmlPretty(is_selection) range
    if !executable('xmllint')
        echohl ErrorMsg | echo "xmllint is not installed" | echohl None | return
    endif

    silent exe a:is_selection ? "'<,'>!xmllint --format -" : "%!xmllint --format -"
endfun

function! ResizeMode()
    if g:resizeMode == 0
        let g:resizeMode = 1
        map j <C-w>5<
        map k <C-w>5-
        map l <C-w>5+
        map m <C-w>5>
        map <silent> <esc> :ResizeMode<cr>
        echo "-- RESIZE --"
    else
        let g:resizeMode = 0
        map j <Left>
        map k <Down>
        map l <Up>
        map m <Right>
        unmap <esc>
        echo ""
    endif
endfun

function! MinifyJson(is_selection) range
    if !executable('jq')
        echohl ErrorMsg | echo "jq is not installed" | echohl None | return
    endif

    silent exe a:is_selection ? "'<,'>!jq -c ." : "%!jq -c ."
endfun

command HelpKey call HelpKey()
command ToggleExpandTab call ToggleExpandTab()
command ToggleLength call ToggleLength()
command ToggleFileManager call ToggleFileManager()
command Sudow :w !sudo tee % >/dev/null
command -range JsonPretty <line1>,<line2>call JsonPretty(<range>)
command -range MinifyJson <line1>,<line2>call MinifyJson(<range>)
command -range XmlPretty <line1>,<line2>call XmlPretty(<range>)
command -nargs=1 Fls :filter /<args>/ ls
command ResizeMode call ResizeMode()

let mapleader = " "
filetype plugin indent on
syntax on
set nocompatible
set nu
set rnu
set path+=**
set wildmenu
set mouse=a
set tabstop=4
set expandtab
set shiftwidth=4
set autoindent
set smartindent
set cursorline
set cursorcolumn
set hlsearch
set incsearch
set title
set timeoutlen=1000
set ttimeoutlen=0
set updatetime=100
set nobackup
set noswapfile
set autoread
set signcolumn="yes"
set listchars=tab:>-,space:.,trail:. ",eol:â†²
set invlist
set re=0
set encoding=utf-8
scriptencoding utf-8
set spelllang=fr
set term=screen-256color
set encoding=UTF-8
set grepprg=ag\ --vimgrep
set wildignore+=*/node_modules/*,*/.git/*,*/build/*,*/dist/*
set keywordprg=:Man
set completeopt-=preview
set hidden

autocmd FileType javascript set makeprg=npm\ run\ test
autocmd FileType typescript set makeprg=npm\ run\ build
autocmd FileType cs set makeprg=dotnet\ build

augroup remember_folds
  autocmd!
  autocmd BufWinLeave,BufLeave,BufWritePost,BufHidden,QuitPre ?* nested silent! mkview
  autocmd BufWinEnter ?* silent! loadview
augroup END

nmap <C-i> :bp<CR>
nmap <C-o> :bn<CR>
nmap <C-h> :bp<bar>sp<bar>bn<bar>bd<CR>
nmap <C-k> :tabp<CR>
nmap <C-l> :tabn<CR>
nmap <C-j> [s
nmap <C-m> ]s
nmap <C-p> :find<space>

nmap <leader>k :nohlsearch<CR>
nmap <leader>l :bel term<CR>
nmap <leader>L :vert rightb term<CR>
nmap <leader>m :call cursor(0, getpos(".")[2] + (len(expand("<cword>"))/2))<CR>
nmap <leader>o :bufdo bd<CR>
nmap <leader>f :ToggleFileManager<CR>
nmap <leader>z zfaB<CR>
nmap <leader>r :ResizeMode<CR>
nmap <leader>i :b #<CR>
nmap <leader>ev :vsp ~/.vimrc<CR>
nmap <leader>sv :source ~/.vimrc<CR>

nmap <leader>ss z=
nmap <leader>sf :set spelllang=fr<CR>
nmap <leader>se :set spelllang=en<CR>

vmap <leader>y "+y
map <leader>yy "+yy
map <leader>p "+p
map <leader>P "+P

vmap <leader>ay "ay
map <leader>ayy "ayy
map <leader>ap "ap
map <leader>aP "aP

vmap <leader>by "by
map <leader>byy "byy
map <leader>bp "bp
map <leader>bP "bP

nmap <F1> :HelpKey<CR>
nmap <F2> :grep!<space>
nmap <F5> :source ~/.vimrc<CR>
nmap <F6> :ToggleExpandTab<CR>
nmap <F7> :ToggleLength<CR>
nmap <F9> :grep! "<<<<<<< HEAD"<CR>
nmap <F10> :grep! TODO<CR>
nmap <F11> :set spell!<CR>

noremap <C-w>j <C-w>h
noremap <C-w>k <C-w>j
noremap <C-w>l <C-w>k
noremap <C-w>m <C-w>l

noremap <C-w>J <C-w>H
noremap <C-w>K <C-w>J
noremap <C-w>L <C-w>K
noremap <C-w>M <C-w>L

tnoremap <C-w>j <C-w>h
tnoremap <C-w>k <C-w>j
tnoremap <C-w>l <C-w>k
tnoremap <C-w>m <C-w>l

tnoremap <C-w>J <C-w>H
tnoremap <C-w>K <C-w>J
tnoremap <C-w>L <C-w>K
tnoremap <C-w>M <C-w>L

map j <Left>
map k <Down>
map l <Up>
map m <Right>

map gk g<Down>
map gl g<Up>

let g:netrw_banner = 0
let g:netrw_liststyle = 0
let g:ft_man_open_mode = 'vert'

colorscheme default
exe "highlight Normal ctermbg="..s:back
exe "highlight NonText ctermbg="..s:back
exe "highlight EndOfBuffer ctermbg="..s:back
exe "highlight CursorLine ctermbg="..s:back2.." cterm=NONE"
exe "highlight CursorColumn ctermbg="..s:back2
exe "highlight VertSplit ctermbg=NONE ctermfg="..s:front
exe "highlight LineNr ctermbg="..s:back.." ctermfg="..s:front
exe "highlight CursorLineNr ctermbg="..s:back.." cterm=bold"
highlight ModeMsg ctermbg=NONE
highlight! link MoreMsg ModeMsg
highlight Error ctermbg=NONE cterm=NONE ctermfg=red
highlight! link ErrorMsg Error
highlight! link SpellBad Error
highlight WarningMsg ctermbg=NONE ctermfg=yellow
highlight Question ctermbg=NONE
highlight SpecialKey ctermfg=237
highlight Visual ctermfg=NONE ctermbg=239
highlight SignColumn ctermbg=NONE ctermfg=NONE
highlight Folded ctermfg=188 cterm=NONE
