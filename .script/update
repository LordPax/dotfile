#!/bin/bash

function echoErr() {
    [ "$1" == "" ] && exit 1
    echo -e "\e[31mERROR :\e[0m $1" > /dev/stderr
}

function helpFunc() {
    echo "Usage: $(basename $0) <options>

Options:
-h, --help .................... Show this help message and exit
--update-pacman ............... Update package from pacman
--nb-pacman ................... Number of package to update from pacman
--update-aur .................. Update package from AUR
--nb-aur ...................... Number of package to update from AUR
--format ...................... Format of the output (nb-aur  nb-pacman)"
}

function updatePacman() {
    checkupdates | awk 'OFS="\n" {print $1, $2, $4; fflush()}' | zenity --list \
        --title="Update Pacman" \
        --text="Mise à jours Pacman disponible" \
        --column="Package" \
        --column="Old version" \
        --column="New version" &> /dev/null

    [ $? -eq 0 ] && xfce4-terminal -x sudo pacman -Syu archlinux-keyring
}

function updateAur() {
    yay -Qum | awk 'OFS="\n" {print $1, $2, $4; fflush()}' | zenity --list \
        --title="Update AUR" \
        --text="Mise à jours AUR disponible" \
        --column="Package" \
        --column="Old version" \
        --column="New version" &> /dev/null

    [ $? -eq 0 ] && xfce4-terminal -x yay -Syu
}

if [ $# -ge 1 ]; then
    case $1 in
        -h | --help)
            helpFunc
            exit 0;;
        --nb-pacman)
            checkupdates 2> /dev/null | wc -l
            exit 0;;
        --update-pacman)
            updatePacman
            exit 0;;
        --nb-aur)
            yay -Qum 2> /dev/null | wc -l
            exit 0;;
        --update-aur)
            updateAur
            exit 0;;
        --format)
            echo "$(yay -Qum 2> /dev/null | wc -l)  $(checkupdates 2> /dev/null | wc -l)"
            # echo "$(yay -Qum 2> /dev/null | wc -l) %{F#d60606}%{F-} $(checkupdates 2> /dev/null | wc -l)"
            exit 0;;
        *)
            echoErr "Unknown parameter \"$1\""
            exit 1;;
    esac
    shift
fi
