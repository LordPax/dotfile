#!/bin/bash

name=$(basename $0)
repo="https://raw.githubusercontent.com/LordPax/dotfile"
branch="$DOTFILE_BRANCH"
files=""
backup=0
readfile=0
output=""

# echoErr <msg>
function echoErr() {
    [ "$1" == "" ] && exit 1
    echo -e "\e[31mERROR :\e[0m $1" > /dev/stderr
}

function helpFunc() {
    echo "Usage: $name [options] <file> [files] ...

Options :
-h or --help      Display this help
-b or --branch    Branch to use (default: $branch)
-B or --backup    Backup of an existing file and add \"_old\" at the end
-r or --read      Output file to stdout
-o or --output    Output directory

Example :
$name .vimrc
$name .vimrc .tmux.conf
$name -B .vimrc
$name -o .config i3/config
$name -B -o .config i3/config"
}

function verification() {
    [ "$branch" == "" ] && echoErr "No branch specified" && exit 1
    [ "$files" == "" ] && echoErr "No files specified" && exit 1
}

# getDotFile <branch> <file>
function getFile() {
    ([ "$1" == "" ] || [ "$2" == "" ]) && echoErr "Parameter needed for \"getFile\"" && exit 1

    echo "Downloading \"$2\" from \"$1\" branch ..."

    local out=$([ "$output" == "" ] && echo "$2" || echo "$output/$2")
    local rename="${out}_old"

    if [ $backup -eq 1 ] && [ -f "$out" ]; then
        mv "$out" "$rename"
        echo "Old file renamed to \"$rename\""
    fi

    if ! wget "$repo/$1/$2" -O "$out" 2> /dev/null; then
        echoErr "Something went wrong while downloading \"$2\""
        if [ $backup -eq 1 ] && [ -f "$rename" ]; then
            mv "$rename" "$out"
            echo "Old file restored"
        fi
        return 1
    fi
}

# readFile <branch> <file>
function readFile() {
    ([ "$1" == "" ] || [ "$2" == "" ]) && echoErr "Parameter needed for \"readFile\"" && exit 1

    if ! wget "$repo/$1/$2" -O - 2> /dev/null; then
        echoErr "Something went wrong while reading \"$2\""
        return 1
    fi
}

if [ $# -ge 1 ]; then
    for i in $(seq 1 $#); do
        case $1 in
            -h | --help)
                helpFunc
                exit 0;;
            -b | --branch)
                branch="$2"
                shift;;
            -B | --backup)
                backup=1;;
            -r | --read)
                readfile=1;;
            -o | --output)
                output="$2"
                shift;;
            "") ;;
            -*)
                echoErr $"Unknown parameter \"$1\""
                exit 1;;
            *)
                files="$files $1"
        esac
        shift
    done
fi

verification

for file in $files; do
    if [ $readfile -eq 1 ]; then
        readFile "$branch" "$file"
    else
        getFile "$branch" "$file"
    fi
done
