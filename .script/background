#!/bin/bash
# author : lordpax
# background v1.1.2

wallpaperPath="$HOME/Images/wallpaper"
defaultImage="$wallpaperPath/default"
dependencies="rofi feh notify-send"
choosenImage=""
version="1.1.2"
action=0

# info <msg>
function info() {
    [ -z "$1" ] && exit 1
    notify-send "Info" "$1"
}

# error <msg>
function error() {
    [ -z "$1" ] && exit 1
    notify-send "Error" "$1"
}

# echo_err <msg>
function echo_err() {
    [ -z "$1" ] && exit 1
    echo -e "\e[31mERROR :\e[0m $1" > /dev/stderr
}

function helpFunc() {
    echo "Usage: $(basename "$0") [options]

Option:
-h or --help .................... Show this help message and exit
-v or --version ................. Show version
-b or --background .............. Apply background
-u or --update <file> ........... Update background
-s or --select .................. Select background
-a or --all <file> .............. Update and apply background"
}

function checkDependencies() {
    for dependency in $dependencies; do
        ! command -v "$dependency" > /dev/null 2>&1 && \
            echo_err "Dependency \"$dependency\" not found" && exit 1
    done
}

function applyBackground() {
    [ ! -f "$defaultImage" ] && error "File \"$defaultImage\" not found" && exit 1
    feh --bg-scale "$defaultImage"
}

function updateBackground() {
    [ ! -f "$choosenImage" ] && error "File \"$choosenImage\" not found" && exit 1
    [ ! -d "$wallpaperPath" ] && mkdir -p "$wallpaperPath"
    [ -f "$defaultImage" ] && unlink "$defaultImage"

    ln -s "$choosenImage" "$defaultImage" && info "Background updated"
}

function selectBackground() {
    [ ! -d "$wallpaperPath" ] && error "Directory \"$wallpaperPath\" not found" && exit 1

    local image=$(
        ls "$wallpaperPath" |\
        grep -v default |\
        rofi -dmenu -i -p "Select background"
    )
    [ -z "$image" ] && exit 0

    choosenImage="$wallpaperPath/$image"
}

if [ $# -ge 1 ]; then
    for _ in $(seq 1 $#); do
        case $1 in
            -h | --help)
                helpFunc
                exit 0;;
            -v | --version)
                echo "$version"
                exit 0;;
            -b | --background)
                action=1;;
            -u | --update)
                action=2
                choosenImage="$2"
                shift;;
            -s | --select)
                action=3;;
            -a | --all)
                action=4
                choosenImage="$2"
                shift;;
            "");;
            *)
                echo_err "Unknown parameter \"$1\""
                exit 1;;
        esac
        shift
    done
fi

checkDependencies

case $action in
    1)
        applyBackground;;
    2)
        updateBackground;;
    3)
        selectBackground
        updateBackground
        applyBackground;;
    4)
        updateBackground
        applyBackground;;
    *)
        helpFunc
        exit 0;;
esac
