snippet desc "describe()"
describe('$1', () => {
	$2
})
endsnippet

snippet it "it should"
it('Should $1', ${2:async} () => {
	$3
})
endsnippet

snippet its "it should sample"
it('Should $1', ${2:async} () => {
	let date = new Date()
	const addressFrom = faker.finance.ethereumAddress()
	const addressTo = faker.finance.ethereumAddress()

	for (let i = 0; i < 10; i++) {
		$3
		await Promise.all([$4])
	}

	const expected = ${5:{}}

	date = new Date()
	const date2 = new Date(date.getTime() - 3 * 24 * 3600 * 1000)

	const result = $6

	result.should.be.deep.equal(expected)
})
endsnippet

snippet promall "Promise.all()"
${1:await} Promise.all([$2])
endsnippet

snippet elif "else if"
else if ($1) {
	$2
}
endsnippet

snippet else "else"
else {
	$1
}
endsnippet

snippet fun=> "name = () => {}"
const ${1:func_name} = ${2:async} ($3) => {
	$4
}
endsnippet

snippet funprom "promise"
const ${1:func_name} = ($2) => new Promise((resolve, reject) => {
	$3
})
endsnippet
